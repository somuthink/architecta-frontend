import { Route, Switch } from "wouter";
import { useState } from "react";
import "./index.css";
import { generatePage } from "./pages/generate/generatePage";
import { InputImage } from "./components/inputs/imageInput";

function App() {
    const [dragging, setDragging] = useState(false);
    const [dragCounter, setDragCounter] = useState(0);
    const [selectedFile, setSelectedFile] = useState<string | null>(null);

    const handleDragEnter = (e: React.DragEvent<HTMLDivElement>) => {
        e.preventDefault();
        e.stopPropagation();
        setDragCounter((prev) => prev + 1);
        setDragging(true);
    };

    const handleDragLeave = (e: React.DragEvent<HTMLDivElement>) => {
        e.preventDefault();
        e.stopPropagation();
        setDragCounter((prev) => {
            const newCount = prev - 1;
            if (newCount <= 0) {
                setDragging(false);
            }
            return newCount;
        });
    };

    const handleDragOver = (e: React.DragEvent<HTMLDivElement>) => {
        e.preventDefault();
        e.stopPropagation();
    };

    const handleDrop = (e: React.DragEvent<HTMLDivElement>) => {
        e.preventDefault();
        e.stopPropagation();
        setDragging(false);
        setDragCounter(0);

        const file = e.dataTransfer.files?.[0];
        if (file) {
            const reader = new FileReader();
            reader.onloadend = () => {
                setSelectedFile(reader.result as string);
            };
            reader.readAsDataURL(file);
        }
    };

    return (
        <div
            className="relative flex items-center justify-center h-full"
            onDragEnter={handleDragEnter}
            onDragOver={handleDragOver}
            onDragLeave={handleDragLeave}
            onDrop={handleDrop}
        >
            {/* Full-Screen Drag-and-Drop Overlay */}
            {dragging && (
                <div className="fixed inset-0 z-50 bg-black bg-opacity-50 flex items-center justify-center">
                    <div className="text-white text-center">
                        <p className="text-xl font-bold">
                            Drop your file here!
                        </p>
                    </div>
                </div>
            )}

            {/* Routed Pages */}
            <Switch>
                <Route path="/generate" component={generatePage}></Route>
                <Route path="/">
                    <InputImage
                        selectedFile={selectedFile}
                        setSelectedFile={setSelectedFile}
                    />
                </Route>
            </Switch>
        </div>
    );
}

export default App;
